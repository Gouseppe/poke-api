---
import Layout from '../layouts/Layout.astro';
import Card from '../components/AstroCard.astro';
import { PokemonInfiniteScroll } from '../components/PokemonInfiniteScroll';
---

<Layout title='Welcome to Astro.'>
  <main>
    <h1>Welcome to <span class='text-gradient'>Astro</span></h1>
    <p class='instructions'>
      To get started, open the directory <code>src/pages</code> in your project.<br
      />
      <strong>Code Challenge:</strong> Tweak the "Welcome to Astro" message above.
    </p>

    <label class='inline-flex items-center cursor-pointer'>
      <input type='checkbox' value='' class='sr-only peer' />
      <div
        class="toggle-theme relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
      >
      </div>
      <span class='ms-3 text-sm font-medium text-gray-900 dark:text-gray-300'
        >Presioname</span
      >
    </label>

    <PokemonInfiniteScroll client:load />

    <script>
      const htmlElement = document.querySelector('html');
      const toggleTheme = () => {
        document.documentElement.classList.toggle('dark');
        console.log('hola mundo');
      };
      const darkMode = () => {
        htmlElement?.classList.contains('dark')
          ? htmlElement?.classList.remove('dark')
          : htmlElement?.classList.add('dark');
      };

      document
        .querySelector('.toggle-theme')
        ?.addEventListener('click', darkMode);
    </script>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 1200px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
</style>
